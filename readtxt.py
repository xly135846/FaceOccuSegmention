from precoss_zd import *
import tensorflow as tf
import tensorflow_model_optimization as tfmot
from tensorflow.keras.layers import *
# import tensorflow.contrib.eager as tfe
# tfe.enable_eager_execution()

import io
import os
import cv2
import glob
import shutil
import random
import argparse
import numpy as np
from tqdm import tqdm
from PIL import Image, ImageFilter

from model_large_cp import *
import matplotlib.pyplot as plt

# import tensorflow.compat.v1 as tf
# tf.disable_v2_behavior()

def get_rote_img(image, angle):
    (h, w) = image.shape[:2]
    (cX, cY) = (w // 2, h // 2)
    M = cv2.getRotationMatrix2D((cX, cY), angle, 1.0)
    rotated = cv2.warpAffine(image, M, (w, h))
    return rotated


def extracPartLmks(lmks_path, start_name):
    ret_list = []
    with open(lmks_path, "r") as f:
        cont = f.readlines()
        index = 1
        flag = False
        length = 0
        for line in cont:
            line = line.strip()
            if flag and index <= length:
                line_n = line.split(" ")
                line_n = [int(float(i)) for i in line_n]
                ret_list.append(line_n)
                index += 1

            if line.startswith(start_name):
                length = int(line.split(" ")[-1])
                flag = True

    return np.array(ret_list)


if __name__ == "__main__":


    ############################################ 
 
    # files =  [
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/20220802_labeled",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/20220808_labeled",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/20220812_labeled",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/20220819_labeled",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/20220826_labeled",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/20220921_labeled",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/fu_fprs21c",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/fu_fprs21c_fig",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/fu_fprs21c_mat",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/fu_fprs21c_self_fig",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/fu_fprs21c_self_fig_fig",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/fu_fprs21c_self_fig_mat",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/quanzhedang_background",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/quanzhedang_background_fig",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/quanzhedang_background_mat",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/dataset_pre3",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/dataset_pre3_fig",
    #     "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/fu_fprs21c_fan_test",
    #     "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/dataset_pre3_fan_test",
    # ]
    # files.sort()
    # print(len(files),files[:10])
    
    # for i in range(len(files[:])):
    #     cccc = files[i].split("/")[-1]
    #     print(cccc)
        
    #     print(files[i])
    #     tmp = glob.glob(files[i]+"/*")
    #     print(len(tmp))
    #     train_file = random.sample(tmp, int(len(tmp)*0.88))
    #     val_file = list(set(tmp) - set(train_file))
    #     print(len(train_file))
    #     print(len(val_file))

    #     train_list, val_list = [], []
    #     for i in tqdm(range(len(train_file[:]))):
    #         tmp = glob.glob(train_file[i]+"/*_img.png")
    #         tmp.sort()
    #         train_list += tmp
    
    #     for i in tqdm(range(len(val_file[:]))):
    #         tmp = glob.glob(val_file[i]+"/*_img.png")
    #         tmp.sort()
    #         val_list += tmp

    #     print(len(train_list), len(val_list))
    #     train_list.sort()
    #     val_list.sort()

    #     # train_list = [i for i in train_list if int(i.split("/")[-1].split("_")[-2])<20]
    #     # val_list = [i for i in val_list if int(i.split("/")[-1].split("_")[-2])<20]

    #     for i in tqdm(range(len(train_list[:]))):
    #         f = open(
    #             '/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/tfrecord/'+cccc+'_train.txt', 'a')
    #         f.write('\n'+train_list[i])
    #         f.close()

    #     for i in tqdm(range(len(val_list[:]))):
    #         f = open(
    #             '/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/tfrecord/'+cccc+'_val.txt', 'a')
    #         f.write('\n'+val_list[i])
    #         f.close()

    ##############################################################

    # bbb = [
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/20220802_labeled/",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/20220808_labeled/",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/20220812_labeled/",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/20220819_labeled/",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/20220826_labeled/",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/20220921_labeled/",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/fu_fprs21c/",
    #     "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/dataset_pre3_fan_test/",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/fu_fprs21c_mat/",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/fu_fprs21c_self_fig/",
    #     "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/fu_fprs21c_fan_test/",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/fu_fprs21c_self_fig_mat/",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/quanzhedang_background/",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/quanzhedang_background_fig/",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/quanzhedang_background_mat/",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/dataset_pre3/",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/dataset_pre3_fig/",
    # ]
    # bbb.sort()
    # print(bbb, len(bbb))

    # for bbbb in bbb:
    #     files = glob.glob(bbbb+"/*_img.png")
    #     files.sort()
    #     print(bbbb, len(files))
    #     print(len(files), files[:10])

    #     aaa = 1000
    #     num = int(len(files)/aaa)+1
    #     print(aaa, num)

    #     for i in tqdm(range(num)):
    #         for j in range(aaa):
    #             save_path_1 = bbbb+"/"+str(i)+"/"
    #             if not os.path.exists(save_path_1):
    #                 os.makedirs(save_path_1)
    #             if i*aaa+j < len(files):
    #                 shutil.move(files[i*aaa+j],
    #                             save_path_1+files[i*aaa+j].split("/")[-1])
    #                 shutil.move(files[i*aaa+j].replace("_img.png", "_mask.png"),
    #                             save_path_1+files[i*aaa+j].split("/")[-1].replace("_img.png", "_mask.png"))
    #                 # shutil.move(files[i*aaa+j].replace("_img.png", "_lms.npy"),
    #                 #             save_path_1+files[i*aaa+j].split("/")[-1].replace("_img.png", "_lms.npy"))

    #############################################################
    # xx = [0.00392156862745098, 0.00784313725490196, 0.011764705882352941, 0.01568627450980392, 0.0196078431372549, 0.023529411764705882, 0.027450980392156862, 0.03137254901960784, 0.03529411764705882, 0.0392156862745098, 0.043137254901960784, 0.047058823529411764, 0.050980392156862744, 0.054901960784313725, 0.058823529411764705, 0.06274509803921569, 0.06666666666666667, 0.07058823529411765, 0.07450980392156863, 0.0784313725490196, 0.08235294117647059, 0.08627450980392157, 0.09019607843137255, 0.09411764705882353, 0.09803921568627451, 0.10196078431372549, 0.10588235294117647, 0.10980392156862745, 0.11372549019607843, 0.11764705882352941, 0.12156862745098039, 0.12549019607843137, 0.12941176470588237, 0.13333333333333333, 0.13725490196078433, 0.1411764705882353, 0.1450980392156863, 0.14901960784313725, 0.15294117647058825, 0.1568627450980392, 0.1607843137254902, 0.16470588235294117, 0.16862745098039217, 0.17254901960784313, 0.17647058823529413, 0.1803921568627451, 0.1843137254901961, 0.18823529411764706, 0.19215686274509805, 0.19607843137254902, 0.2, 0.20392156862745098, 0.20784313725490197, 0.21176470588235294, 0.21568627450980393, 0.2196078431372549, 0.2235294117647059, 0.22745098039215686, 0.23137254901960785, 0.23529411764705882, 0.23921568627450981, 0.24313725490196078, 0.24705882352941178, 0.25098039215686274, 0.2549019607843137, 0.25882352941176473, 0.2627450980392157, 0.26666666666666666, 0.27058823529411763, 0.27450980392156865, 0.2784313725490196, 0.2823529411764706, 0.28627450980392155, 0.2901960784313726, 0.29411764705882354, 0.2980392156862745, 0.30196078431372547, 0.3058823529411765, 0.30980392156862746, 0.3137254901960784, 0.3176470588235294, 0.3215686274509804, 0.3254901960784314, 0.32941176470588235, 0.3333333333333333, 0.33725490196078434, 0.3411764705882353, 0.34509803921568627, 0.34901960784313724, 0.35294117647058826, 0.3568627450980392, 0.3607843137254902, 0.36470588235294116, 0.3686274509803922, 0.37254901960784315, 0.3764705882352941, 0.3803921568627451, 0.3843137254901961, 0.38823529411764707, 0.39215686274509803, 0.396078431372549, 0.4, 0.403921568627451, 0.40784313725490196, 0.4117647058823529, 0.41568627450980394, 0.4196078431372549, 0.4235294117647059, 0.42745098039215684, 0.43137254901960786, 0.43529411764705883, 0.4392156862745098, 0.44313725490196076, 0.4470588235294118, 0.45098039215686275, 0.4549019607843137, 0.4588235294117647, 0.4627450980392157, 0.4666666666666667, 0.47058823529411764, 0.4745098039215686, 0.47843137254901963, 0.4823529411764706, 0.48627450980392156, 0.49019607843137253, 0.49411764705882355, 0.4980392156862745, 0.5019607843137255, 0.5058823529411764, 0.5098039215686274, 0.5137254901960784, 0.5176470588235295, 0.5215686274509804, 0.5254901960784314, 0.5294117647058824, 0.5333333333333333, 0.5372549019607843, 0.5411764705882353, 0.5450980392156862, 0.5490196078431373, 0.5529411764705883, 0.5568627450980392, 0.5607843137254902, 0.5647058823529412, 0.5686274509803921, 0.5725490196078431, 0.5764705882352941, 0.5803921568627451, 0.5843137254901961, 0.5882352941176471, 0.592156862745098, 0.596078431372549, 0.6, 0.6039215686274509, 0.6078431372549019, 0.611764705882353, 0.615686274509804, 0.6196078431372549, 0.6235294117647059, 0.6274509803921569, 0.6313725490196078, 0.6352941176470588, 0.6392156862745098, 0.6431372549019608, 0.6470588235294118, 0.6509803921568628, 0.6549019607843137, 0.6588235294117647, 0.6627450980392157, 0.6666666666666666, 0.6705882352941176, 0.6745098039215687, 0.6784313725490196, 0.6823529411764706, 0.6862745098039216, 0.6901960784313725, 0.6941176470588235, 0.6980392156862745, 0.7019607843137254, 0.7058823529411765, 0.7098039215686275, 0.7137254901960784, 0.7176470588235294, 0.7215686274509804, 0.7254901960784313, 0.7294117647058823, 0.7333333333333333, 0.7372549019607844, 0.7411764705882353, 0.7450980392156863, 0.7490196078431373, 0.7529411764705882, 0.7568627450980392, 0.7607843137254902, 0.7647058823529411, 0.7686274509803922, 0.7725490196078432, 0.7764705882352941, 0.7803921568627451, 0.7843137254901961, 0.788235294117647, 0.792156862745098, 0.796078431372549, 0.8, 0.803921568627451, 0.807843137254902, 0.8117647058823529, 0.8156862745098039, 0.8196078431372549, 0.8235294117647058, 0.8274509803921568, 0.8313725490196079, 0.8352941176470589, 0.8392156862745098, 0.8431372549019608, 0.8470588235294118, 0.8509803921568627, 0.8549019607843137, 0.8588235294117647, 0.8627450980392157, 0.8666666666666667, 0.8705882352941177, 0.8745098039215686, 0.8784313725490196, 0.8823529411764706, 0.8862745098039215, 0.8901960784313725, 0.8941176470588236, 0.8980392156862745, 0.9019607843137255, 0.9058823529411765, 0.9098039215686274, 0.9137254901960784, 0.9176470588235294, 0.9215686274509803, 0.9254901960784314, 0.9294117647058824, 0.9333333333333333, 0.9372549019607843, 0.9411764705882353, 0.9450980392156862, 0.9490196078431372, 0.9529411764705882, 0.9568627450980393, 0.9607843137254902, 0.9647058823529412, 0.9686274509803922, 0.9725490196078431, 0.9764705882352941, 0.9803921568627451, 0.984313725490196, 0.9882352941176471, 0.9921568627450981, 0.996078431372549] 
    # # ### 1800 ###
    # # mouth_yy_1800 = [0.8390575051872738, 0.8513864369456301, 0.8581881404737759, 0.8628126204537001, 0.8662912047094075, 0.8691108238167653, 0.8714263741664435, 0.8733658327758809, 0.8750749698630775, 0.8765054000160933, 0.8777969392605375, 0.8789988703321701, 0.88008189623804, 0.8810743054173584, 0.8822165480915215, 0.883557743095185, 0.8845285194065208, 0.8853991483654131, 0.8862232146627231, 0.8870092434687863, 0.8877692796181136, 0.8884416526947477, 0.8891517757683878, 0.8897846729621757, 0.8903367236725196, 0.8908222534781576, 0.8912963203461499, 0.89169384335364, 0.8920950185509452, 0.8924206622482787, 0.8927434188021807, 0.8930730413779023, 0.8933715864416795, 0.89364228238939, 0.8939085799874013, 0.8941712613017364, 0.8944179551905317, 0.8946547910631135, 0.8948799085531821, 0.8951155835155977, 0.8953360489643525, 0.8955198271998966, 0.8957239056334823, 0.8958931418807323, 0.8960701987039851, 0.8962694162120421, 0.8964033994787041, 0.8965647195836661, 0.8966881341263067, 0.896860046836212, 0.8969872005815298, 0.8971242636141491, 0.8972724899987872, 0.8974330117139123, 0.8975603407015137, 0.8976828211278234, 0.8978080651578432, 0.8979342496170722, 0.8980257615224804, 0.8981646711064635, 0.8982861167685197, 0.8984011016021092, 0.8985151891798191, 0.8986156935397566, 0.8986842077510335, 0.8987703267774547, 0.8988593955840786, 0.8989614838350761, 0.8990529318442355, 0.8991280312579232, 0.8992297819876771, 0.8993190679278119, 0.8993867265205986, 0.8994556905567409, 0.8994949188995857, 0.8995518341399839, 0.899639878474315, 0.8997279564784144, 0.8997803573641816, 0.8998271343206758, 0.89989007016778, 0.8999311158004396, 0.8999645029783268, 0.9000003430460568, 0.9000399891176118, 0.9000697523500654, 0.900074167863932, 0.9000969400340496, 0.9001409467045466, 0.9001729153038716, 0.900195940040612, 0.9002206555223999, 0.9002206715683664, 0.9002260819082761, 0.9002264532643557, 0.9002215761458412, 0.9002402458459515, 0.9002633584134286, 0.90025446326584, 0.9002607183692166, 0.9002705381142705, 0.9002641288086324, 0.9002701850389468, 0.9002970571183274, 0.9003131801481583, 0.9003484567382962, 0.9003636989258426, 0.9003834726722331, 0.9003853897196483, 0.9003927145425289, 0.9003963044893178, 0.9003852870848156, 0.9003697985546218, 0.9003457264979283, 0.9003410535532135, 0.9003380591629077, 0.9003433329269114, 0.9003363515418187, 0.9003355264739991, 0.9003049407090163, 0.9002758921137578, 0.9002761587513135, 0.9002484230117692, 0.9002044179663699, 0.9001821754605469, 0.9002075697661754, 0.9001845899740258, 0.9001802770402749, 0.9001638182925349, 0.9001489324928137, 0.9001546937321371, 0.9001376877455824, 0.9001277713420336, 0.9000880787406872, 0.9000423276748115, 0.9000206468304901, 0.8999976928365572, 0.8999864517012105, 0.899966285976898, 0.8999475419252361, 0.8999010775164911, 0.8998670918204402, 0.8998081327255418, 0.8997732290211906, 0.8997264826878543, 0.8996694444118227, 0.8996293033295429, 0.8995533464697051, 0.8995061221169198, 0.899471375149947, 0.8994604728079229, 0.8994078732205256, 0.899357904303761, 0.8992700989623905, 0.8992198095030698, 0.8991811037645979, 0.8991246109904084, 0.899035949974832, 0.8989508407391513, 0.8988623565898373, 0.8987856526289508, 0.8986976619333613, 0.8986035972752201, 0.8985197080492173, 0.898464977139076, 0.898372156940057, 0.8982964815840063, 0.8981853859274929, 0.8981021945337435, 0.8979904494518957, 0.8978940616285921, 0.8977759626418084, 0.8976919098267168, 0.8975947356331491, 0.8974984367508752, 0.8973767122758665, 0.8972377892425617, 0.8971272345287074, 0.8969978515044009, 0.8968816663117587, 0.8967696244877049, 0.8966301096013389, 0.8964865605137916, 0.8963504619469703, 0.8962297526980171, 0.896073687987485, 0.8959145636475779, 0.8957544414812989, 0.8955671218055806, 0.8953583954343234, 0.8952554350575718, 0.8951001451817703, 0.8948958073258445, 0.8947364433316822, 0.894479478408568, 0.8942966622512053, 0.8941058136381502, 0.8938812945242202, 0.8936799635485981, 0.8934517586750071, 0.8932455726502565, 0.8930221025142396, 0.892780346095566, 0.8925258107283338, 0.8923492917364793, 0.8920559261530565, 0.8917492949044056, 0.8914626103256332, 0.8915062451589583, 0.8911681890784621, 0.890799773705375, 0.8904490756913546, 0.8900645166714631, 0.8896707583375516, 0.8892561858049046, 0.8888116455923074, 0.8883633707823146, 0.8878869523004926, 0.8874250102476187, 0.8869000780447822, 0.8863153007391176, 0.8857284524373504, 0.8851606802891021, 0.8838107672942295, 0.8831256518134792, 0.882402020673584, 0.8816477457032958, 0.8809550311883426, 0.8802082012122157, 0.8793209613794571, 0.8784352244625622, 0.8775762047115593, 0.8766598176881061, 0.875635621556852, 0.8746076718463562, 0.8733876225557763, 0.8721462170279547, 0.8707540271620858, 0.8693188673792853, 0.8677008649880389, 0.8660541522791234, 0.8642279686603619, 0.8621673315774058, 0.8597667745068116, 0.8571508123865863, 0.8540848246484558, 0.850517645660726, 0.8461654406992642, 0.8409037283414129, 0.8342897602357239, 0.825474899500296, 0.8126229791010682, 0.7912607790391825, 0.7460842597826823]
    # # face_yy_1800 = [0.8528229317282029, 0.8600120330652867, 0.8643255469220218, 0.8672794367358615, 0.8696391298239613, 0.8715760836694132, 0.8731846857367115, 0.874550021796003, 0.8756568785607823, 0.876598107476048, 0.8775007313520846, 0.8783527855927327, 0.8790875781231446, 0.8797762145000495, 0.8803832224681596, 0.8808339696656753, 0.8813629401682505, 0.8818456189014449, 0.8823356452597753, 0.8827726487452392, 0.8832176387290158, 0.8835962924828299, 0.8839755613663187, 0.8843123934321907, 0.8846111197560595, 0.8848987105797652, 0.8851076465793319, 0.8853526714729361, 0.8855931833498899, 0.8858694194092371, 0.8860903637532419, 0.8862777663616578, 0.8865109317990519, 0.8867225723850705, 0.8868670810673589, 0.8870413468897635, 0.887180459228928, 0.8873480684866131, 0.8874855214613867, 0.8876677199846285, 0.8877844918621128, 0.88795357634894, 0.8880524865846314, 0.8881764144328348, 0.8882950920916077, 0.8883791939955655, 0.8884912381223627, 0.8885981884641909, 0.8887146355063669, 0.8888311535476032, 0.8889194799305178, 0.8890139800003041, 0.8891140639284185, 0.8892203156450794, 0.8893125823246165, 0.8894131292663684, 0.8894926551693938, 0.8895924581351727, 0.8896753766723783, 0.8897715882970443, 0.8898586259643518, 0.8899649473208625, 0.8900433043817844, 0.8900978459384102, 0.8902397124544819, 0.8903042529873346, 0.8903842402439436, 0.8904332714839169, 0.890565940997397, 0.89065816182775, 0.8907415443496562, 0.8908359160256223, 0.8909014955419466, 0.8909554050023607, 0.8910383193548298, 0.8911183609664397, 0.8912310933276402, 0.8912992780641659, 0.891369042422203, 0.8914264397855434, 0.8914992266931799, 0.8915707214935719, 0.89164051795889, 0.8916919651441234, 0.8917679026304978, 0.8918372151374416, 0.8919027813263597, 0.8919642659647169, 0.8920298285055736, 0.8920926449131126, 0.8921696082059967, 0.8922296378378772, 0.8923007917270573, 0.8923611865417324, 0.8924131748192925, 0.8924587709752714, 0.8925113015870456, 0.8925577041305257, 0.892623458849796, 0.8926750889848766, 0.8927338300563291, 0.8927775528506765, 0.8928494537276535, 0.8929075667209255, 0.8929631125602292, 0.8930306774832852, 0.8931016663897343, 0.8931926389564407, 0.8932564874833618, 0.893316992021284, 0.8933866469658985, 0.8934382802842051, 0.8934912776113537, 0.8935501082575336, 0.8936102099598551, 0.893649783689885, 0.8936936891065146, 0.8937256672255177, 0.893747696054433, 0.8938128667405106, 0.8938085813753439, 0.8938665888303152, 0.8939077348918558, 0.8939437371215363, 0.8939800215222922, 0.8940208912615782, 0.894072169056319, 0.894119669562085, 0.8941549589661087, 0.8942241880194246, 0.8942733594000272, 0.894313117879202, 0.8943636177638518, 0.8944347071831371, 0.8945006860505942, 0.8945651545913598, 0.8945904905099586, 0.8946214135397605, 0.8946629379865751, 0.8946849740682385, 0.8946953454336075, 0.8947417940059694, 0.8947432809214206, 0.8947706911729066, 0.8948084618926937, 0.8948388095741484, 0.894893508500051, 0.8949118220738271, 0.8949134314999659, 0.8949323219823355, 0.8949474431572998, 0.8949503566840497, 0.8949569190044618, 0.8949476356625352, 0.8949570928837507, 0.8949679387617991, 0.894995447045801, 0.8950336885988959, 0.8950565667295871, 0.8950803538654016, 0.8951024326070809, 0.8951236262488456, 0.8951585815569215, 0.895185097898362, 0.8952171692668658, 0.895223424953367, 0.8952566675574466, 0.8953040751041534, 0.895342898814813, 0.8953841639085719, 0.8953873578165517, 0.8953872891286745, 0.8954117287890824, 0.8954092970141097, 0.8954236727858699, 0.8954147431676742, 0.8954069598568588, 0.8953952676779441, 0.8953980770345248, 0.8953713032181643, 0.8953336890102145, 0.8953723972188841, 0.8953714263300602, 0.8953774720528513, 0.8953422055548038, 0.8952859697123401, 0.8952467207853398, 0.895219819020877, 0.8951689219324058, 0.8951617324233626, 0.8951517673928082, 0.8951166692504353, 0.895125129027852, 0.8950949017073384, 0.8950422193661233, 0.8949710324611095, 0.8949748597767244, 0.8949470307909316, 0.8948995714529615, 0.8948493054424309, 0.8948112605376556, 0.8947542288583751, 0.8947244478328152, 0.8946594224584171, 0.894619649320237, 0.894563286203802, 0.894509874319725, 0.8944656262721209, 0.8944238542587412, 0.8943186668672046, 0.8942502218780122, 0.8940917101574523, 0.8940177683074315, 0.8939240203873857, 0.893812852287407, 0.8937178963499296, 0.8936366451470582, 0.8935363558703534, 0.8934077961301541, 0.8933122188039285, 0.8931545312643827, 0.8930471484995813, 0.8929006803783334, 0.8927702789779364, 0.8925798291368172, 0.8924037090171012, 0.892184854759942, 0.8918922169422335, 0.8915789982979594, 0.8912107088497537, 0.8908428537757861, 0.8904546001464086, 0.8900265423216202, 0.8895514621492092, 0.8890131399600475, 0.8884702907760033, 0.8877806512745046, 0.8870117867165196, 0.8862612960962367, 0.8853740569417713, 0.8842789023111711, 0.8831252202808031, 0.8818391825886357, 0.8801378612241878, 0.8783744179166137, 0.8763921339867865, 0.8738811877258663, 0.8708697868426823, 0.8670824551710854, 0.8621731788044786, 0.8561358327239248, 0.8473633609163495, 0.8337178515859045, 0.8075074452158603]    
    
    # # ### 800 ###
    # # mouth_yy_800 = [0.8585762354233539, 0.8753429974072847, 0.8846119606782794, 0.8909671343199874, 0.8958153038206359, 0.8996701824740617, 0.9028572862411542, 0.9055346605136465, 0.907879693062839, 0.9098722379820338, 0.9116722924146058, 0.9133245557645139, 0.9147809836554448, 0.9160919845555917, 0.9174889705637678, 0.9193239491015017, 0.9205989115987315, 0.9217338055905764, 0.9228305182098723, 0.9238655849855504, 0.9247829156428995, 0.9256988964967267, 0.9265900431283088, 0.9274066033592852, 0.9281314924588292, 0.928771515714835, 0.9293120366831086, 0.9298144908309314, 0.9302799463208422, 0.9307150158215217, 0.931137966502188, 0.9315172877563227, 0.9318738242908695, 0.9322269501741739, 0.9325457352121814, 0.9328611669435065, 0.933169643821393, 0.9334323219829755, 0.9337076824047703, 0.9339979834549285, 0.9342543814117577, 0.9345145256143689, 0.934769326754217, 0.9349943565712187, 0.9352220967844065, 0.9354300276798284, 0.9356425200265656, 0.9358534456167901, 0.9360448400654681, 0.9362352827564958, 0.9364290878763872, 0.9365885978018915, 0.9367643719443923, 0.9369344633056494, 0.9370975325173263, 0.9372704956256204, 0.9374484145671766, 0.9375856863487443, 0.9377435094208862, 0.9378727783898827, 0.9380304377531521, 0.9381789739312796, 0.9383286340296162, 0.9384818760654525, 0.9385944903114881, 0.9387052985236599, 0.9388242526526416, 0.9389562790175874, 0.9390721270302261, 0.9391846610441518, 0.9393020134251021, 0.9394087978706732, 0.939515236251859, 0.9396193309418875, 0.9397513982387713, 0.9398631369473813, 0.9399782099192842, 0.9400760129294496, 0.9401714352940356, 0.9402781733185471, 0.9403564350025515, 0.9404593349829041, 0.9405614693344029, 0.940642706982911, 0.9406876983463139, 0.9407610846138569, 0.9408318531608774, 0.9408954159469662, 0.940949095244303, 0.9410432637890856, 0.9411201137701359, 0.9411977045203693, 0.9412933043089013, 0.9413604451838924, 0.9414263315874517, 0.941495702192885, 0.9415568553359325, 0.9415881439413939, 0.941634286251085, 0.9416710877112884, 0.9417240532611227, 0.9417687254167713, 0.941813950606075, 0.9418492611007957, 0.9418758470602956, 0.941906625020651, 0.9419549334289969, 0.9419863065952468, 0.9420418835362813, 0.9420803823400606, 0.942113613563267, 0.9421214596368294, 0.9421548369291832, 0.9422002196002295, 0.9422339096300464, 0.9422393921357957, 0.9422509325462678, 0.9422602493550988, 0.94231917181693, 0.9423444532024414, 0.9423633166840124, 0.9423880417768546, 0.9424008151504787, 0.9424118554383902, 0.942419091405215, 0.9424430205685275, 0.9424536458780921, 0.9424642253711706, 0.9424478671094508, 0.9424664506691574, 0.942457118097607, 0.9424703002592044, 0.9424555273947701, 0.9424398046264937, 0.9424301219567621, 0.9424152013592193, 0.942398004715718, 0.9424076765740319, 0.9424301953561534, 0.9424236243891393, 0.9424281334772586, 0.9423968007551032, 0.9423846479877217, 0.942376133658727, 0.9423663567552862, 0.9423548028845095, 0.9423197520067178, 0.9422964951530168, 0.9422868855637468, 0.9422413055184263, 0.9422099474184015, 0.9421749730480714, 0.9421343610991029, 0.9420666245192154, 0.9420276213356178, 0.9419771493773683, 0.9419461454196038, 0.9418764191653366, 0.9418243150860814, 0.9417867252971747, 0.9417524513049569, 0.9416844277387721, 0.9416390604841015, 0.9415981002018733, 0.9415376719157897, 0.9415066210886428, 0.9414522365772994, 0.9414140194030862, 0.9413440624839771, 0.9412887384724101, 0.9411969766827691, 0.9411137086625976, 0.9410659044989005, 0.9409655780210511, 0.9408660118324399, 0.9407777409985627, 0.9406847367732034, 0.9405982156590816, 0.9405270147965611, 0.9403835602146212, 0.9402588501602885, 0.9401648254923107, 0.9400490151783814, 0.9399698718399254, 0.9398717910513071, 0.9397709618562873, 0.9396659241414994, 0.9395457538498073, 0.9394122413121128, 0.9392602063649739, 0.9390990803236823, 0.9389531518514556, 0.938833713267822, 0.9386805243729915, 0.938523897541321, 0.9383476380330903, 0.9381823825164841, 0.937973590967966, 0.9378123190788095, 0.9376231357523096, 0.9374268978827954, 0.937202394704689, 0.9369998136654631, 0.9367488329632069, 0.9364974422572124, 0.9362793799213461, 0.9360274851159295, 0.9357714729730635, 0.9355324100852206, 0.9352714259763938, 0.9349644344857045, 0.9346826698938151, 0.9343696988954826, 0.9340465646087122, 0.9337391627108091, 0.9333337895461548, 0.9329388074355061, 0.9325599227038047, 0.9321780003756156, 0.9317525650242531, 0.9313235656390761, 0.9308091235013167, 0.9302808060693849, 0.9297266605278249, 0.9291925217417412, 0.928632294889185, 0.9279717878254692, 0.927330438154517, 0.92669418814434, 0.9259681012423503, 0.9252118402622568, 0.9243953548885545, 0.9235883975633605, 0.9226710370313681, 0.9216703113805239, 0.9205777269416313, 0.9194208882000506, 0.9181584866570213, 0.9167914888917684, 0.9152599535948276, 0.913667948892259, 0.9117901617976055, 0.9096410313325897, 0.9073017408452088, 0.9045576133889391, 0.9014213090665749, 0.897744950116105, 0.8932871101346939, 0.8877168073368411, 0.880688657450431, 0.8711125404088055, 0.857529733918936, 0.8349246721686242, 0.786302730042057]
    # # face_yy_800 = [0.855425303597518, 0.8654043141940293, 0.8714202890431643, 0.8757008213228286, 0.8790079938001794, 0.8817194240151898, 0.8838920608425356, 0.8858177337839451, 0.8875224783941963, 0.8889667289793904, 0.8903222913421854, 0.8915595885332299, 0.8927136343682749, 0.893781538426457, 0.8947623460403481, 0.8957082335465719, 0.8965349359598737, 0.8973404476659502, 0.898083200874191, 0.8987470546585546, 0.8993543489935184, 0.8999955049003237, 0.9006021065047322, 0.9010836797085086, 0.9015945718764578, 0.9020662760087159, 0.9025382497296836, 0.9030092505600791, 0.903400374865997, 0.9037321495344864, 0.904096213511695, 0.9045144015259735, 0.9049147877921885, 0.9053035340889733, 0.9056146318058117, 0.9058517589375449, 0.9061055568377454, 0.9063330396651215, 0.9065767319175677, 0.9067963687776733, 0.9070293241375053, 0.907228105382032, 0.9074635828660405, 0.9076646089799217, 0.9078814678695536, 0.9081083132802713, 0.9083302268979376, 0.9085342284764706, 0.9087229059800506, 0.9089182603481775, 0.9090984924612996, 0.9092972020173328, 0.9094821722403407, 0.9096935924373651, 0.90990219803312, 0.9100931767099678, 0.9102846619249217, 0.9104742262791424, 0.9105969293635453, 0.9107664063650509, 0.9109435453276343, 0.911105283625704, 0.9112972593671524, 0.9114555137494916, 0.9116452473935094, 0.911824675282595, 0.9119917082590523, 0.9121674009490216, 0.9122990824248115, 0.9124588213743017, 0.9126434293393495, 0.9127960112423124, 0.912941255100674, 0.9130790710355524, 0.9132686786180836, 0.9134399822388297, 0.9135627708006325, 0.9137097799730035, 0.9138630453369135, 0.9140226669099373, 0.9141976515228681, 0.9143160659334135, 0.9144820622543469, 0.9146519119576221, 0.9147501838427896, 0.9148739387048983, 0.9150285750483892, 0.9151572822003855, 0.9153003229845804, 0.9154360682446028, 0.9155601773235893, 0.915711212692655, 0.9158722018500399, 0.9159835041062072, 0.9161321239374011, 0.9162933270193598, 0.9164622889477964, 0.9165799247598021, 0.9166940601673955, 0.9168367840800224, 0.9169610459105965, 0.9170962542711231, 0.9172168813385279, 0.9173450402378891, 0.9174761684564051, 0.9176294183318523, 0.9177754823614797, 0.9179278045704985, 0.9180620968010101, 0.9181962395815649, 0.9183496416453599, 0.9185000681350695, 0.9186295589757596, 0.9187944177178188, 0.9189106398472284, 0.9190514883251134, 0.9191668914481546, 0.9193363837157887, 0.9194638005700004, 0.9195746992222937, 0.9197072903762997, 0.9198464425736502, 0.9199657593359528, 0.9200852981830271, 0.9202144904650659, 0.9203535800734776, 0.9204646388543839, 0.9205845300397661, 0.9207219022865595, 0.9208483730726872, 0.920963225596728, 0.9211066045460843, 0.9212326257353556, 0.9213814075190456, 0.921517672115537, 0.92162801386221, 0.9217591907795682, 0.9219042317339398, 0.9220402435583763, 0.9221612871035076, 0.9223030333594021, 0.9224375128960725, 0.9225827113726338, 0.9226921282988297, 0.9228173126701082, 0.9229286397620706, 0.9230558286684978, 0.9232141767962881, 0.9233317744737873, 0.9234710942535425, 0.9235761687980597, 0.9237041232463206, 0.9238071880056917, 0.9239171448443486, 0.9240678572436891, 0.9242112196120591, 0.9243365595786408, 0.9244469726792522, 0.9245890481698598, 0.9246923858183552, 0.9248405240410049, 0.92495012364486, 0.925053994383266, 0.92520339461976, 0.9253297540583476, 0.9254863336495068, 0.9256122751185215, 0.9257408116043632, 0.9258300961056077, 0.9259561939305085, 0.9260687037906496, 0.9262131310860148, 0.9263302469238223, 0.9264027910580452, 0.926531941453911, 0.92667733395204, 0.9268208821207952, 0.9269070690926866, 0.9270619523926618, 0.9271947676771684, 0.9273198894659548, 0.9274424138682543, 0.9275342423224784, 0.9276612357872637, 0.9277582051834522, 0.9278629532768443, 0.9279907658893767, 0.9281226521594025, 0.9282759491395653, 0.9284228159946762, 0.9285356378569523, 0.9287036027579141, 0.92881499924252, 0.9289561488846092, 0.9290484276130896, 0.9291600445040896, 0.9293053303687159, 0.9293834131411447, 0.9294877552344073, 0.929612664812679, 0.929760758014217, 0.9298496946383982, 0.9299694113440594, 0.9300823056145425, 0.930189611676143, 0.9302794367900573, 0.9303821632679078, 0.9304812614064236, 0.9305583519381914, 0.9306517623581987, 0.9307560093856835, 0.9308645946509803, 0.930948915733167, 0.9310082269790783, 0.9310667977085324, 0.9311475587853754, 0.9312617172048846, 0.9313240677565628, 0.9314062914577395, 0.9315227123322732, 0.9315314018213227, 0.9316244582632799, 0.9317032908235916, 0.9317518097815449, 0.9317813862695447, 0.9318087319719169, 0.9318500760450046, 0.9318784751288616, 0.9318596694435551, 0.9319165313225978, 0.9319104574882882, 0.9318495071532595, 0.9317427573420166, 0.9316964419464495, 0.9315017650924522, 0.9313095458684912, 0.9310223794207726, 0.9307388719788646, 0.9303440443990583, 0.9298792489796931, 0.9292676104781178, 0.928690449726597, 0.9279947221063406, 0.9270342666375743, 0.9259385414716745, 0.9243591135158392, 0.9226483426613549, 0.9203699814773679, 0.9177489102205167, 0.9140066635405595, 0.9090452148851763, 0.901684337752159, 0.8896264959910616, 0.864574415843542]    
    
    # #### INTER_NEAREST ####
    # mouth_yy_1800 = [0.8390575051872738, 0.8513864369456301, 0.8581881404737759, 0.8628126204537001, 0.8662912047094075, 0.8691108238167653, 0.8714263741664435, 0.8733658327758809, 0.8750749698630775, 0.8765054000160933, 0.8777969392605375, 0.8789988703321701, 0.88008189623804, 0.8810743054173584, 0.8822165480915215, 0.883557743095185, 0.8845285194065208, 0.8853991483654131, 0.8862232146627231, 0.8870092434687863, 0.8877692796181136, 0.8884416526947477, 0.8891517757683878, 0.8897846729621757, 0.8903367236725196, 0.8908222534781576, 0.8912963203461499, 0.89169384335364, 0.8920950185509452, 0.8924206622482787, 0.8927434188021807, 0.8930730413779023, 0.8933715864416795, 0.89364228238939, 0.8939085799874013, 0.8941712613017364, 0.8944179551905317, 0.8946547910631135, 0.8948799085531821, 0.8951155835155977, 0.8953360489643525, 0.8955198271998966, 0.8957239056334823, 0.8958931418807323, 0.8960701987039851, 0.8962694162120421, 0.8964033994787041, 0.8965647195836661, 0.8966881341263067, 0.896860046836212, 0.8969872005815298, 0.8971242636141491, 0.8972724899987872, 0.8974330117139123, 0.8975603407015137, 0.8976828211278234, 0.8978080651578432, 0.8979342496170722, 0.8980257615224804, 0.8981646711064635, 0.8982861167685197, 0.8984011016021092, 0.8985151891798191, 0.8986156935397566, 0.8986842077510335, 0.8987703267774547, 0.8988593955840786, 0.8989614838350761, 0.8990529318442355, 0.8991280312579232, 0.8992297819876771, 0.8993190679278119, 0.8993867265205986, 0.8994556905567409, 0.8994949188995857, 0.8995518341399839, 0.899639878474315, 0.8997279564784144, 0.8997803573641816, 0.8998271343206758, 0.89989007016778, 0.8999311158004396, 0.8999645029783268, 0.9000003430460568, 0.9000399891176118, 0.9000697523500654, 0.900074167863932, 0.9000969400340496, 0.9001409467045466, 0.9001729153038716, 0.900195940040612, 0.9002206555223999, 0.9002206715683664, 0.9002260819082761, 0.9002264532643557, 0.9002215761458412, 0.9002402458459515, 0.9002633584134286, 0.90025446326584, 0.9002607183692166, 0.9002705381142705, 0.9002641288086324, 0.9002701850389468, 0.9002970571183274, 0.9003131801481583, 0.9003484567382962, 0.9003636989258426, 0.9003834726722331, 0.9003853897196483, 0.9003927145425289, 0.9003963044893178, 0.9003852870848156, 0.9003697985546218, 0.9003457264979283, 0.9003410535532135, 0.9003380591629077, 0.9003433329269114, 0.9003363515418187, 0.9003355264739991, 0.9003049407090163, 0.9002758921137578, 0.9002761587513135, 0.9002484230117692, 0.9002044179663699, 0.9001821754605469, 0.9002075697661754, 0.9001845899740258, 0.9001802770402749, 0.9001638182925349, 0.9001489324928137, 0.9001546937321371, 0.9001376877455824, 0.9001277713420336, 0.9000880787406872, 0.9000423276748115, 0.9000206468304901, 0.8999976928365572, 0.8999864517012105, 0.899966285976898, 0.8999475419252361, 0.8999010775164911, 0.8998670918204402, 0.8998081327255418, 0.8997732290211906, 0.8997264826878543, 0.8996694444118227, 0.8996293033295429, 0.8995533464697051, 0.8995061221169198, 0.899471375149947, 0.8994604728079229, 0.8994078732205256, 0.899357904303761, 0.8992700989623905, 0.8992198095030698, 0.8991811037645979, 0.8991246109904084, 0.899035949974832, 0.8989508407391513, 0.8988623565898373, 0.8987856526289508, 0.8986976619333613, 0.8986035972752201, 0.8985197080492173, 0.898464977139076, 0.898372156940057, 0.8982964815840063, 0.8981853859274929, 0.8981021945337435, 0.8979904494518957, 0.8978940616285921, 0.8977759626418084, 0.8976919098267168, 0.8975947356331491, 0.8974984367508752, 0.8973767122758665, 0.8972377892425617, 0.8971272345287074, 0.8969978515044009, 0.8968816663117587, 0.8967696244877049, 0.8966301096013389, 0.8964865605137916, 0.8963504619469703, 0.8962297526980171, 0.896073687987485, 0.8959145636475779, 0.8957544414812989, 0.8955671218055806, 0.8953583954343234, 0.8952554350575718, 0.8951001451817703, 0.8948958073258445, 0.8947364433316822, 0.894479478408568, 0.8942966622512053, 0.8941058136381502, 0.8938812945242202, 0.8936799635485981, 0.8934517586750071, 0.8932455726502565, 0.8930221025142396, 0.892780346095566, 0.8925258107283338, 0.8923492917364793, 0.8920559261530565, 0.8917492949044056, 0.8914626103256332, 0.8915062451589583, 0.8911681890784621, 0.890799773705375, 0.8904490756913546, 0.8900645166714631, 0.8896707583375516, 0.8892561858049046, 0.8888116455923074, 0.8883633707823146, 0.8878869523004926, 0.8874250102476187, 0.8869000780447822, 0.8863153007391176, 0.8857284524373504, 0.8851606802891021, 0.8838107672942295, 0.8831256518134792, 0.882402020673584, 0.8816477457032958, 0.8809550311883426, 0.8802082012122157, 0.8793209613794571, 0.8784352244625622, 0.8775762047115593, 0.8766598176881061, 0.875635621556852, 0.8746076718463562, 0.8733876225557763, 0.8721462170279547, 0.8707540271620858, 0.8693188673792853, 0.8677008649880389, 0.8660541522791234, 0.8642279686603619, 0.8621673315774058, 0.8597667745068116, 0.8571508123865863, 0.8540848246484558, 0.850517645660726, 0.8461654406992642, 0.8409037283414129, 0.8342897602357239, 0.825474899500296, 0.8126229791010682, 0.7912607790391825, 0.7460842597826823]
    # mouth_yy_800 = [0.8585762354233539, 0.8753429974072847, 0.8846119606782794, 0.8909671343199874, 0.8958153038206359, 0.8996701824740617, 0.9028572862411542, 0.9055346605136465, 0.907879693062839, 0.9098722379820338, 0.9116722924146058, 0.9133245557645139, 0.9147809836554448, 0.9160919845555917, 0.9174889705637678, 0.9193239491015017, 0.9205989115987315, 0.9217338055905764, 0.9228305182098723, 0.9238655849855504, 0.9247829156428995, 0.9256988964967267, 0.9265900431283088, 0.9274066033592852, 0.9281314924588292, 0.928771515714835, 0.9293120366831086, 0.9298144908309314, 0.9302799463208422, 0.9307150158215217, 0.931137966502188, 0.9315172877563227, 0.9318738242908695, 0.9322269501741739, 0.9325457352121814, 0.9328611669435065, 0.933169643821393, 0.9334323219829755, 0.9337076824047703, 0.9339979834549285, 0.9342543814117577, 0.9345145256143689, 0.934769326754217, 0.9349943565712187, 0.9352220967844065, 0.9354300276798284, 0.9356425200265656, 0.9358534456167901, 0.9360448400654681, 0.9362352827564958, 0.9364290878763872, 0.9365885978018915, 0.9367643719443923, 0.9369344633056494, 0.9370975325173263, 0.9372704956256204, 0.9374484145671766, 0.9375856863487443, 0.9377435094208862, 0.9378727783898827, 0.9380304377531521, 0.9381789739312796, 0.9383286340296162, 0.9384818760654525, 0.9385944903114881, 0.9387052985236599, 0.9388242526526416, 0.9389562790175874, 0.9390721270302261, 0.9391846610441518, 0.9393020134251021, 0.9394087978706732, 0.939515236251859, 0.9396193309418875, 0.9397513982387713, 0.9398631369473813, 0.9399782099192842, 0.9400760129294496, 0.9401714352940356, 0.9402781733185471, 0.9403564350025515, 0.9404593349829041, 0.9405614693344029, 0.940642706982911, 0.9406876983463139, 0.9407610846138569, 0.9408318531608774, 0.9408954159469662, 0.940949095244303, 0.9410432637890856, 0.9411201137701359, 0.9411977045203693, 0.9412933043089013, 0.9413604451838924, 0.9414263315874517, 0.941495702192885, 0.9415568553359325, 0.9415881439413939, 0.941634286251085, 0.9416710877112884, 0.9417240532611227, 0.9417687254167713, 0.941813950606075, 0.9418492611007957, 0.9418758470602956, 0.941906625020651, 0.9419549334289969, 0.9419863065952468, 0.9420418835362813, 0.9420803823400606, 0.942113613563267, 0.9421214596368294, 0.9421548369291832, 0.9422002196002295, 0.9422339096300464, 0.9422393921357957, 0.9422509325462678, 0.9422602493550988, 0.94231917181693, 0.9423444532024414, 0.9423633166840124, 0.9423880417768546, 0.9424008151504787, 0.9424118554383902, 0.942419091405215, 0.9424430205685275, 0.9424536458780921, 0.9424642253711706, 0.9424478671094508, 0.9424664506691574, 0.942457118097607, 0.9424703002592044, 0.9424555273947701, 0.9424398046264937, 0.9424301219567621, 0.9424152013592193, 0.942398004715718, 0.9424076765740319, 0.9424301953561534, 0.9424236243891393, 0.9424281334772586, 0.9423968007551032, 0.9423846479877217, 0.942376133658727, 0.9423663567552862, 0.9423548028845095, 0.9423197520067178, 0.9422964951530168, 0.9422868855637468, 0.9422413055184263, 0.9422099474184015, 0.9421749730480714, 0.9421343610991029, 0.9420666245192154, 0.9420276213356178, 0.9419771493773683, 0.9419461454196038, 0.9418764191653366, 0.9418243150860814, 0.9417867252971747, 0.9417524513049569, 0.9416844277387721, 0.9416390604841015, 0.9415981002018733, 0.9415376719157897, 0.9415066210886428, 0.9414522365772994, 0.9414140194030862, 0.9413440624839771, 0.9412887384724101, 0.9411969766827691, 0.9411137086625976, 0.9410659044989005, 0.9409655780210511, 0.9408660118324399, 0.9407777409985627, 0.9406847367732034, 0.9405982156590816, 0.9405270147965611, 0.9403835602146212, 0.9402588501602885, 0.9401648254923107, 0.9400490151783814, 0.9399698718399254, 0.9398717910513071, 0.9397709618562873, 0.9396659241414994, 0.9395457538498073, 0.9394122413121128, 0.9392602063649739, 0.9390990803236823, 0.9389531518514556, 0.938833713267822, 0.9386805243729915, 0.938523897541321, 0.9383476380330903, 0.9381823825164841, 0.937973590967966, 0.9378123190788095, 0.9376231357523096, 0.9374268978827954, 0.937202394704689, 0.9369998136654631, 0.9367488329632069, 0.9364974422572124, 0.9362793799213461, 0.9360274851159295, 0.9357714729730635, 0.9355324100852206, 0.9352714259763938, 0.9349644344857045, 0.9346826698938151, 0.9343696988954826, 0.9340465646087122, 0.9337391627108091, 0.9333337895461548, 0.9329388074355061, 0.9325599227038047, 0.9321780003756156, 0.9317525650242531, 0.9313235656390761, 0.9308091235013167, 0.9302808060693849, 0.9297266605278249, 0.9291925217417412, 0.928632294889185, 0.9279717878254692, 0.927330438154517, 0.92669418814434, 0.9259681012423503, 0.9252118402622568, 0.9243953548885545, 0.9235883975633605, 0.9226710370313681, 0.9216703113805239, 0.9205777269416313, 0.9194208882000506, 0.9181584866570213, 0.9167914888917684, 0.9152599535948276, 0.913667948892259, 0.9117901617976055, 0.9096410313325897, 0.9073017408452088, 0.9045576133889391, 0.9014213090665749, 0.897744950116105, 0.8932871101346939, 0.8877168073368411, 0.880688657450431, 0.8711125404088055, 0.857529733918936, 0.8349246721686242, 0.786302730042057]
    # face_yy_1800 =[0.8464379561009394, 0.8590432202389913, 0.8656388665973324, 0.8701587257719408, 0.8736393095783282, 0.8765945728143827, 0.8792732459085473, 0.8815586940549726, 0.8836277265638004, 0.88554200660972, 0.8872890369356649, 0.8887678206892009, 0.8902420824789828, 0.8915820775475839, 0.8928755156032624, 0.8941110350842657, 0.8952207711903613, 0.8962822458235454, 0.8973016903077718, 0.898309646786376, 0.899224761763875, 0.9000707684217173, 0.9008612816011832, 0.9016722877451138, 0.9024350908077786, 0.9031594699375772, 0.9038436615015001, 0.9044794674564235, 0.9050752256334945, 0.9056851748850294, 0.906253603160871, 0.906729410730804, 0.907161394162053, 0.9074716478621985, 0.9077572054781073, 0.9079982024877354, 0.9082268042318782, 0.9084146170017188, 0.9086126864639154, 0.9088226104794548, 0.9089857553377241, 0.9091541948440889, 0.9093408394783852, 0.9095135319827953, 0.9096729703247476, 0.9098387756463907, 0.909995374882464, 0.9101753633291197, 0.910320810758447, 0.9105162264294687, 0.9106433927275404, 0.9107751028387302, 0.910898524874989, 0.911004419784516, 0.9111663955899336, 0.9113189925776064, 0.9114367463184876, 0.9115561925044364, 0.9116740714796212, 0.9118209517955034, 0.9119481589890439, 0.9120806013882575, 0.9121989650035971, 0.9122924538663177, 0.9124252665061691, 0.9125246397062302, 0.9126229273617184, 0.9127306246167765, 0.9128569352643792, 0.9130088464076898, 0.9130842179359197, 0.9131787358732739, 0.9132717827977179, 0.9133351852118179, 0.9134459966300819, 0.9135386029901289, 0.9136154990627997, 0.9136894975002295, 0.9137711690120632, 0.9138487774939849, 0.9138867244850756, 0.9139903507688636, 0.9140965048482814, 0.9141896757763532, 0.9142598765119713, 0.9143597551798494, 0.9144192164831554, 0.9144997734441717, 0.9145913804158698, 0.9146432256735793, 0.914697765093788, 0.9147515087471915, 0.9148151559027399, 0.9148653333754106, 0.9149214575181334, 0.914994073445309, 0.9150596033470696, 0.9151061842009666, 0.9152038838720388, 0.9152468967508396, 0.9153163687366268, 0.9153718593385448, 0.9153950249623029, 0.915448547470519, 0.9154716267028099, 0.9155169079921694, 0.9155626077441058, 0.9155890642068966, 0.9156291233790577, 0.9156270097184075, 0.9156469868273865, 0.9156868281380247, 0.9157278840973772, 0.9157676321912498, 0.9158055645345887, 0.9158147658317232, 0.915824974610139, 0.9158287068373104, 0.9158716743501027, 0.9158880206514467, 0.9159052928805599, 0.9159157818332603, 0.9159448988429905, 0.9159636298760689, 0.9159795127567323, 0.9159986242067403, 0.916016164733667, 0.9160320866616907, 0.9160589520671869, 0.9160781517306924, 0.916111353917055, 0.9161073939236797, 0.9161118490836843, 0.9161144362637581, 0.9161037423713689, 0.9161174029448889, 0.9161373697203208, 0.916158517282397, 0.9161659138232333, 0.9161841729273061, 0.9161667252314183, 0.9161623142077802, 0.9161619884470755, 0.9161766735705663, 0.916172567427298, 0.9161604444280863, 0.9161477635296669, 0.9161340430865499, 0.9161269619031804, 0.9161151493376328, 0.9161053037552623, 0.9160743591812901, 0.9160581712127628, 0.9160532501717186, 0.9160507512758215, 0.9160514303513887, 0.9160485581542115, 0.9160451019658663, 0.9160203154817174, 0.9159809293790707, 0.915966712874623, 0.9159308912832348, 0.9158955494790444, 0.9158800850004024, 0.9158536500017229, 0.9158223177979185, 0.9158022145062914, 0.9157641121463013, 0.9157450624890274, 0.9156890864908567, 0.9156582937209088, 0.9156133398742308, 0.9155645476897775, 0.9155013419876618, 0.915486512244303, 0.9154677516292432, 0.9154360582069428, 0.9154048441839938, 0.9153540331808344, 0.9153428686501361, 0.9152641347267999, 0.9152009885238681, 0.9151325443272217, 0.9150754253366202, 0.9149989200488893, 0.9149209660822729, 0.914838163465145, 0.9147422266835055, 0.9146732994535866, 0.9145831253840895, 0.9144497510224759, 0.9143488491835056, 0.9142522814647215, 0.9141267805954432, 0.9140141861227169, 0.9138718207722283, 0.9137326403402802, 0.9136079387142121, 0.9134813466923162, 0.9133097395332617, 0.9131457364087832, 0.9129626396863733, 0.9127729305537233, 0.9126197337768654, 0.912464152974135, 0.9122848875142204, 0.912064153984528, 0.9118512881689831, 0.9116453694899139, 0.9114776741256455, 0.9112303630346649, 0.9110054566416627, 0.9107849485083552, 0.9105163106405655, 0.9102057914996082, 0.9098937897732076, 0.9096297500395075, 0.909320096698875, 0.9089675945158614, 0.9085898767751798, 0.9082874121629106, 0.9079110976515988, 0.9075234751347254, 0.9071228591582896, 0.9067218404984448, 0.9062993850475748, 0.9058114421895246, 0.90533609106746, 0.904816959980248, 0.9042802099761842, 0.9036628296422716, 0.9030211171904108, 0.9023522704017125, 0.9016297457885346, 0.9008785955326514, 0.9000798799582251, 0.8991902077430171, 0.8981922701860221, 0.8971587542542774, 0.8960244757584326, 0.8947515256842999, 0.8932266569026843, 0.8914253412783495, 0.8893603719361673, 0.8869389905922931, 0.8843194581629203, 0.8814324345236717, 0.8781305462220079, 0.874307542180887, 0.8696109800722412, 0.8636616140496594, 0.85493203044128, 0.8406458737458438, 0.8125970125085316]
    # face_yy_800 = [0.8540156585018952, 0.8680943701883516, 0.8756632094772884, 0.8810783661351953, 0.8857878150197515, 0.889577972300034, 0.8927372120177958, 0.8953701485303238, 0.8978005299978878, 0.89994621516121, 0.9018858338105737, 0.9036676147645802, 0.9052817530831413, 0.906824351908045, 0.9083057795441972, 0.9097015320464837, 0.9109930200342979, 0.9122524203887205, 0.9134568774813481, 0.9145815370974979, 0.9156119437064124, 0.9166656772426229, 0.9177447714690464, 0.9187162678862343, 0.9196650969202081, 0.9206133552775095, 0.9214762073632807, 0.9222857714582038, 0.9231090272170138, 0.9238430448261986, 0.9245055010750872, 0.9251781039678503, 0.9257640934564243, 0.9262162609933596, 0.9265375682959772, 0.9268428046159156, 0.9271027849081507, 0.9273651321060438, 0.9276431344884738, 0.9279355573142689, 0.9281909979587959, 0.928453624563862, 0.9286839899498988, 0.9289295759599325, 0.9291676901759361, 0.9293989396533634, 0.9296283022518432, 0.929832183147809, 0.9300509254860924, 0.9302435233434444, 0.9304234445926848, 0.9306289261563132, 0.9308167078665169, 0.9310303566390599, 0.93123453538961, 0.9314261025358941, 0.9315975701449812, 0.9317995192941944, 0.931988511104918, 0.9321781840395491, 0.9323703402727325, 0.9325481841407571, 0.9327339992421688, 0.9329254802544044, 0.933078796630679, 0.9332252154862068, 0.9333894443033338, 0.9335533947258295, 0.9337142055430381, 0.9338742433725398, 0.9340232418678803, 0.9341938563205192, 0.934342801494861, 0.9344860487190091, 0.9346036912212695, 0.9347633515657657, 0.9349087916302193, 0.9350269028049337, 0.9351505567012303, 0.9352920764359464, 0.9354198819198485, 0.9355561787977295, 0.9356887767661853, 0.935817655894343, 0.9359517324298817, 0.9360693042178773, 0.9361557254603436, 0.9362380126358886, 0.9363510620989741, 0.9364764009774861, 0.9365813915370237, 0.936713672491436, 0.9368268432955651, 0.936942159911582, 0.9370237143210189, 0.9371018723421508, 0.9372168473758237, 0.9373339061538674, 0.9374438655260614, 0.9375293191640638, 0.9376394240800616, 0.937714033992492, 0.9378177548544608, 0.937882947734243, 0.9379764824547113, 0.9380642939277369, 0.9381403586187869, 0.9382554830423399, 0.9383426965925358, 0.9384438295841847, 0.9385289090034907, 0.938600947000458, 0.9386735827734081, 0.9388002267370185, 0.9388896493907587, 0.9389752204412151, 0.9390790096771903, 0.9391940182581006, 0.9392803633525401, 0.9393517336392194, 0.9394249603093665, 0.9394917155700545, 0.9395624875096693, 0.9396235524513395, 0.9397007106106209, 0.9397907557418249, 0.9398705325905357, 0.9399693544005762, 0.9400164966768834, 0.9400800919154915, 0.9401744769295688, 0.9402628709804255, 0.9403471537036154, 0.9404124539326132, 0.9404761593260905, 0.9405338743528932, 0.940637380848185, 0.9406814280295337, 0.9407671614365606, 0.9408469339503582, 0.9409156851272774, 0.9409683623258224, 0.9410189096591078, 0.9410780320846502, 0.9411244638427377, 0.9411921495297056, 0.9412492865476352, 0.9413630265690331, 0.9414237401687384, 0.9415172131849003, 0.9415908518614883, 0.9416430062346547, 0.9417069835153438, 0.9417778254108577, 0.9418189944934197, 0.9418944850957606, 0.9419525418265295, 0.9420317452948024, 0.9420889675703878, 0.9421595960122783, 0.9422301742284999, 0.9422756880917108, 0.9423114629245286, 0.9423587790939685, 0.9424207573117855, 0.9424569665377568, 0.9424801163026156, 0.9425045969862451, 0.9425365016376303, 0.9425744776523008, 0.9426121184235611, 0.9426354176680115, 0.9426615208897042, 0.9426785692433743, 0.9427053556056414, 0.9427436948565138, 0.9427620325377093, 0.9428030366608637, 0.9428735950694488, 0.94291686285355, 0.9429366860498914, 0.9429436410043408, 0.9429644279254993, 0.9429913253313321, 0.9430188701906194, 0.9430222321900084, 0.9430266143376825, 0.943050024499756, 0.9430663408512764, 0.9430548015187938, 0.9430032499477706, 0.9429739870623746, 0.9429803438185824, 0.9429507032642322, 0.9429166515048951, 0.9428723779697029, 0.9428730770655863, 0.9428494636555973, 0.9428314399121138, 0.9428082970460827, 0.9427643778196758, 0.9426959039245989, 0.9425840128662226, 0.9425720504166728, 0.9425352277131752, 0.942457044010078, 0.9423940390621046, 0.9423383069299214, 0.942288660724614, 0.942185995289578, 0.9420810269764133, 0.9419833244088212, 0.9418697864191257, 0.9417503133643915, 0.9416783486183573, 0.9416045777479558, 0.9415212419334992, 0.9413417487109147, 0.9412032950359955, 0.9410327396733995, 0.9407907000665058, 0.9406182541729325, 0.9403386809128377, 0.9400615162823324, 0.9398005236604576, 0.9395552932528167, 0.9392657159059796, 0.9388462098971274, 0.9384727471492152, 0.9380586664365652, 0.9376410700876385, 0.9371643854351906, 0.9366223095172123, 0.9361227361196558, 0.9356120990993706, 0.9349516845028338, 0.9342892131009346, 0.9335023888161709, 0.9326717151894808, 0.9317457571489476, 0.9307355105429488, 0.9294203302078793, 0.9279456220838432, 0.9261392409418999, 0.9241939981798036, 0.9218553169397411, 0.9192971889081787, 0.9163725368650841, 0.9127992066543221, 0.9083236555756968, 0.9023903395837831, 0.8941460235649512, 0.8804987111725056, 0.8528348273794512]
    
    # plt.plot(xx,mouth_yy_1800,'-',color="r")
    # plt.plot(xx,face_yy_1800,'-',color="c")
    # plt.plot(xx,mouth_yy_800,'-',color="r")
    # plt.plot(xx,face_yy_800,'-',color="y")
    # plt.savefig("./aaa_1017.png")

    # np.set_printoptions(suppress=True)
    # print(np.float16(np.array(mouth_yy)-np.array(face_yy)))

    # file = glob.glob("/mnt/fu07/xueluoyang/data/segmentation/0627_face_192/fu_fprs21c_self_fig/*/fprs21c_006_24_00000997*_img.png")
    # print(len(file))
    # print(file)

    #############################################################
    
    # model_path = glob.glob("./checkpoints/0714_mouth_model_smaller_dice_cls_log_69/*.hdf5")
    # model_path.sort()

    # # model_path = model_path[100:200]
    # model_path = model_path[100:101]
    
    # aaa_img = np.load("./tmp/mouth_64_img_1800_tmp.npy")
    # aaa_true = np.load("./tmp/mouth_64_true_1800_tmp.npy")

    # INPUT_SIZE=64
    # model = unet_vgg_model(INPUT_SIZE, 0.5)

    # for kkk in range(len(model_path[:])):
    #     print(model_path[kkk])
    #     model.load_weights(model_path[kkk])

    #     out = model.predict(aaa_img)

    #     out_cv = out[:,:,:,1]
    #     pred = np.zeros((out_cv.shape[0],INPUT_SIZE,INPUT_SIZE,3))
    #     for ccc in range(3):
    #         pred[:,:,:,ccc] = out_cv*255.

    #     yyy = []
    #     for THRESHOLD in tqdm(range(1,255)):
    #         if len(np.where(aaa_true==255)[0])!=0:
    #             true_tmp = np.where(aaa_true==255,1,0)
    #             pred_tmp = np.where(pred>=THRESHOLD,1,0)
    #             union = len(np.where(true_tmp==1)[0])+len(np.where(pred_tmp==1)[0])
    #             intersec = len(np.where(true_tmp*pred_tmp==1)[0])
    #             one_img_iou = intersec/(union-intersec)
    #             yyy.append(one_img_iou)
        
    #     plt.figure()
    #     plt.plot(xx,mouth_yy,'-',color="r")
    #     plt.plot(xx,yyy,'-',color="c")
    #     plt.savefig("./"+str(kkk)+".png")
    
    
    ############ ran_crop     #############
    # left_up_x = [0,0]
    # left_down_x = [0,64]
    # right_up_x = [64,0]
    # right_down_x = [64,64]
    
    # for kkk in range(100):
    
    #     ran_x_up = [random.randint(1,32),0]
    #     ran_x_down = [random.randint(1,32),64]
    #     ran_y_left = [0, random.randint(1,32)]
    #     ran_y_right = [64, random.randint(1,32)]

    #     x_left = [ left_up_x, ran_x_up, ran_x_down, left_down_x]
    #     x_right = [ ran_x_up, right_up_x, right_down_x, ran_x_down]
    #     y_up = [ left_up_x, ran_y_left, ran_y_right, right_up_x]
    #     y_down = [ left_down_x, ran_y_left, ran_y_right, right_down_x]

    #     img = cv2.imread("/mnt/fu07/xueluoyang/data/segmentation/0616/fu_fprs21c/0/fprs21c_003_02_00001546_mouth_4_img.png")
    #     mask = cv2.imread("/mnt/fu07/xueluoyang/data/segmentation/0616/fu_fprs21c/0/fprs21c_003_02_00001546_mouth_4_mask.png")
    #     img = cv2.fillPoly(img,np.int32([x_left]),(0, 0, 0))
    #     mask = cv2.fillPoly(mask,np.int32([x_left]),(0, 0, 0))
    #     cv2.imwrite("./save_img_6/x_left_"+str(kkk)+"_img.png", img)   
    #     cv2.imwrite("./save_img_6/x_left_"+str(kkk)+"_mask.png", mask)   
                
        # img = cv2.imread("/mnt/fu07/xueluoyang/data/segmentation/0616/fu_fprs21c/0/fprs21c_003_02_00001546_mouth_4_img.png")
        # mask = cv2.fillPoly(img,np.int32([x_right]),(0, 0, 0))
        # cv2.imwrite("./save_img_6/x_right_"+str(kkk)+".png", mask)   
        
        # img = cv2.imread("/mnt/fu07/xueluoyang/data/segmentation/0616/fu_fprs21c/0/fprs21c_003_02_00001546_mouth_4_img.png")
        # mask = cv2.fillPoly(img,np.int32([y_up]),(0, 0, 0))
        # cv2.imwrite("./save_img_6/y_up_"+str(kkk)+".png", mask) 
        
        # img = cv2.imread("/mnt/fu07/xueluoyang/data/segmentation/0616/fu_fprs21c/0/fprs21c_003_02_00001546_mouth_4_img.png")
        # mask = cv2.fillPoly(img,np.int32([y_down]),(0, 0, 0))
        # cv2.imwrite("./save_img_6/y_down_"+str(kkk)+".png", mask) 
    
    ##################################################################################
    # file = np.load("./dde_meanshape96_sin_contour91.npz")
    # MeanShape96 = np.array(file["Meanshape"])
    # MeanShape64 = np.array(file["Meanshape"])/96*64
    
    # face_idx_ = [14,16,17, 23,22,0, 13,12,11,10,9,8,7,6,5,4,3,2,1, 39,64];
    # face_npy_idx_ = [28,30,31, 37,36,0, 26,24,22,20,18,16,14,12,10,8,6,4,2, 53,78]
    # face_ms_ = np.uint8(MeanShape64[face_npy_idx_])
    
    # print(face_ms_)

    ###################################################################################
    # def write_txt(aaa, txt_name):
    #     for i in tqdm(range(len(aaa))):
    #         f = open(txt_name,'a')
    #         f.write('\n'+str(aaa[i]))
    #         f.close()
    
    # files = glob.glob("")
    
    # txt_list = [
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0729_face_128_new/tfrecord/fu_fprs21c_fig_train.txt",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0729_face_128_new/tfrecord/fu_fprs21c_fig_val.txt",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0729_face_128_new/tfrecord/fu_fprs21c_mat_train.txt",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0729_face_128_new/tfrecord/fu_fprs21c_mat_val.txt",
    #     "/mnt/fu07/xueluoyang/data/segmentation/0729_face_128_new/tfrecord/fu_fprs21c_self_fig_fig_train.txt",
    #     "/mnt/fu07/xueluoyang/data/segmentation/0729_face_128_new/tfrecord/fu_fprs21c_self_fig_fig_val.txt",
    #     "/mnt/fu07/xueluoyang/data/segmentation/0729_face_128_new/tfrecord/fu_fprs21c_self_fig_train.txt",
    #     "/mnt/fu07/xueluoyang/data/segmentation/0729_face_128_new/tfrecord/fu_fprs21c_self_fig_val.txt",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0729_face_128_new/tfrecord/fu_fprs21c_train.txt",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0729_face_128_new/tfrecord/fu_fprs21c_val.txt",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0729_face_128_new/tfrecord/quanzhedang_background_fig_train.txt",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0729_face_128_new/tfrecord/quanzhedang_background_mat_train.txt",
    #     # "/mnt/fu07/xueluoyang/data/segmentation/0729_face_128_new/tfrecord/quanzhedang_background_train.txt",
    #     ]
    
    # for kkk in txt_list:
    #     aaa = get_list_from_filenames(kkk)
    #     print(len(aaa), aaa[:10])
        
    #     bbb = [i for i in aaa if int(i.split("/")[-1].split("_")[-2])<30]
    #     print(len(bbb), bbb[:10])

    #     write_txt(bbb, kkk.replace("tfrecord","tfrecord_2"))

    #################################################################################################################
    # files = glob.glob("/mnt/fu07/xueluoyang/data/segmentation/0729_face_128_new/tfrecord/*_train.txt")
    # files.sort()
    # print(len(files),files[:10])
    
    # for i in range(len(files)):
    #     aaa = get_list_from_filenames(files[i])
    #     print(len(aaa), files[i])
    
    # def ran_crop(img,mask):
        
    #     left_up_x = [0,0]
    #     left_down_x = [0,INPUT_SIZE]
    #     right_up_x = [INPUT_SIZE,0]
    #     right_down_x = [INPUT_SIZE,INPUT_SIZE]
        
    #     ran_x_up = [random.randint(1,INPUT_SIZE_half),0]
    #     ran_x_down = [random.randint(1,INPUT_SIZE_half),INPUT_SIZE]

    #     ran_x_up_right = [random.randint(INPUT_SIZE_half,INPUT_SIZE),0]
    #     ran_x_down_right = [random.randint(INPUT_SIZE_half,INPUT_SIZE),INPUT_SIZE]

    #     x_left = [ left_up_x, ran_x_up, ran_x_down, left_down_x]
    #     x_right = [ ran_x_up_right, right_up_x, right_down_x, ran_x_down_right]

    #     random_ran = random.randint(1,2)
    #     if random_ran==1:
    #         img = cv2.fillPoly(img,np.int32([x_left]),(0, 0, 0))
    #         mask = cv2.fillPoly(mask,np.int32([x_left]),(0, 0, 0))
    #     elif random_ran==2:
    #         img = cv2.fillPoly(img,np.int32([x_right]),(0, 0, 0))
    #         mask = cv2.fillPoly(mask,np.int32([x_right]),(0, 0, 0))

    #     return img, mask
    
    # INPUT_SIZE = 96
    # INPUT_SIZE_half = 48

    # for i in range(100):
    #     img = np.ones((INPUT_SIZE,INPUT_SIZE))*255
    #     mask = np.ones((INPUT_SIZE,INPUT_SIZE))*255

    #     img, mask = ran_crop(img, mask)
    #     cv2.imwrite("./save_img_6/"+str(i)+"_img.png", img)
    #     cv2.imwrite("./save_img_6/"+str(i)+"_mask.png", mask)
    
    
    #######################################################################################

    # for i in range(len(aaa[:1])):
    #     files_png = glob.glob(aaa[i]+"/*.png")
    #     files_jpg = glob.glob(aaa[i]+"/*.jpg")
    #     files_png.sort()
    #     files_jpg.sort()
    #     print(len(files_png), len(files_jpg))

    ################################### zhedang ############################################
    # files = get_list_from_filenames(
    #     "/mnt/fu07/xueluoyang/data/segmentation/0729_face_128_new/tfrecord/quanzhedang_background_fig_train.txt")
    # print(len(files),files[:10])
    
    # aaa  = [i for i in files if int(i.split("/")[-1].split("_")[1])<1000]
    # print(len(aaa))

    # for i in tqdm(range(len(aaa[:]))):
    #     f = open(
    #         "/mnt/fu07/xueluoyang/data/segmentation/0729_face_128_new/tfrecord_no_glass/quanzhedang_background_fig_train.txt", 'a')
    #     f.write('\n'+aaa[i])
    #     f.close()
    
    #######################################################################################
    # ori_img = get_list_from_filenames(
    #     "/mnt/fu07/xueluoyang/data/segmentation/fu_fprs21c_shouzhizhedang_glass.txt"
    #     )
    # ori_img = glob.glob(
    #     "/mnt/fu07/xueluoyang/data/segmentation/face_labeled/20220823/20220802_labeled_glass/*.png",
    #     )
    # print(len(ori_img), ori_img[:10])

    # crop_img = get_list_from_filenames(
    #     "/mnt/fu07/xueluoyang/data/segmentation/0729_face_128_new/tfrecord/20220802_labeled_val.txt"
    # )
    # print(len(crop_img), crop_img[:10])
    
    # ccc = []
    # for i in tqdm(range(len(crop_img[:]))):
    #     aaa = crop_img[i].split("/")[-1]
        
    #     for kkk in range(len(ori_img)):
    #         bbb = ori_img[kkk].split("/")[-1].split("/")[-1][:-4]
    #         if bbb in aaa:
    #             ccc.append(crop_img[i])
            
    # print(len(ccc), ccc[:10])

    # for i in tqdm(range(len(ccc[:]))):
    #     f = open(
    #         '/mnt/fu07/xueluoyang/data/segmentation/0729_face_128_new/tfrecord_glass/20220802_labeled_val.txt', 'a')
    #     f.write('\n'+ccc[i])
    #     f.close()

    ############################################################################################################################
    
    # aaa = glob.glob("./save_img_6/*.jpg")
    # print(len(aaa))

    # for i in tqdm(range(len(aaa[:30]))):
    #     tmp = cv2.imread(aaa[i])
    #     print("111 ", tmp.shape)
        
    #     random_degree = (random.randint(0,100)+100)/100
    #     mouth_rect_shape_0 = int(tmp.shape[0]*random_degree)
    #     mouth_rect_shape_1 = int(tmp.shape[1]*random_degree)

    #     ccc = cv2.resize(tmp,(mouth_rect_shape_1,mouth_rect_shape_0),
    #                 interpolation=cv2.INTER_NEAREST)
        
    #     crop_random_x = random.randint(0,mouth_rect_shape_0-ccc.shape[0])
    #     crop_random_y = random.randint(0,mouth_rect_shape_1-ccc.shape[1])
        
    #     bbb = ccc[crop_random_x:crop_random_x+tmp.shape[0], crop_random_y:crop_random_y+tmp.shape[1], :]
    #     print("333 ", bbb.shape)

    #     cv2.imwrite("./save_img_4/tmp_"+str(i)+"_tmp.jpg", tmp)
    #     cv2.imwrite("./save_img_4/tmp_"+str(i)+"_bbb.jpg", bbb)


    # files = glob.glob("/mnt/fu07/xueluoyang/data/segmentation/dataset_pre3_labeled/*/*.jpg")
    # print(len(files))

    # aaa = 0
    # for kkk in tqdm(range(len(files[:]))):
    #     json_path = files[kkk][:-4]+".json"
    #     all_landmark_path = files[kkk][:-4]+"_landmark_all.txt"
    #     if os.path.exists(all_landmark_path)==True and os.path.exists(json_path)==True:
    #         aaa+=1
    # print(aaa)

    #################################################################################################
    files = glob.glob("/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/tfrecord/*train.txt")
    print(len(files), files)
    files.sort()
    aaa = 0 
    for i in files:
        print( len(get_list_from_filenames(i)), i )
        aaa += len(get_list_from_filenames(i))
    print(aaa)    
    print(aaa/128)    
    print(aaa/128*2)    

    files = glob.glob("/mnt/fu07/xueluoyang/data/segmentation/0929_face_192/tfrecord/*val.txt")
    print(len(files), files)
    files.sort()
    aaa = 0 
    for i in files:
        print( len(get_list_from_filenames(i)), i )
        aaa += len(get_list_from_filenames(i))
    print(aaa)
    print(aaa/128)
    print(aaa/128*2) 
    ##################################################################################################

    ### 概率
    # trian_tfrecord_list = glob.glob("/mnt/fu07/xueluoyang/data/segmentation/0729_face_128_new/tfrecord/*train.txt")

    # for kkk in trian_tfrecord_list:
    #     print(kkk)
    #     aaa = get_list_from_filenames(kkk)
    #     print(len(aaa), aaa[:10])

    #     bbb = np.zeros((128,128,3))
    #     for i in tqdm(range(len(aaa[:]))):
    #         mask = cv2.imread(aaa[i].replace("_img.png","_mask.png"))
    #         bbb += mask
        
    #     bbb = bbb/len(aaa)
    #     print(bbb.shape)
    #     cv2.imwrite("./save_img_6/"+kkk.split("/")[-1][:-4]+".png", bbb)
    
    ##################################################################################################

    # def get_random_processing():
    #     angle = random.uniform(-5, 5) * np.pi / 180
    #     offset = [random.uniform(-3, 3), random.uniform(-2, 2)]
    #     scaling = random.uniform(-0.1, 0.1)+1
    #     r = np.array([[np.cos(angle), -np.sin(angle)], [np.sin(angle), np.cos(angle)]]) * scaling
    #     return r,scaling,offset


    # files = get_list_from_filenames("/mnt/fu07/xueluoyang/data/segmentation/fu_fprs21c.txt")
    # files.sort()
    # print(len(files),files[:10])

    # ccc = []
    # ddd = []
    # for kkk in tqdm(range(len(files[:]))):
    #     all_landmark_path = files[kkk][:-4]+"_landmark_all.txt"
    #     if os.path.exists(all_landmark_path)==True:
    #         landmark = extracPartLmks(all_landmark_path,"base").tolist()
    #         landmark_arr = np.array(landmark)

    #         all_landmark_arr = np.float32(landmark_arr) 
            
    #         y00 = min(all_landmark_arr[:,1])
    #         y11 = max(all_landmark_arr[:,1])
    #         x00 = min(all_landmark_arr[:,0])
    #         x11 = max(all_landmark_arr[:,0])
            
    #         aaa = x11-x00
    #         bbb = y11-y00
            
    #         frontal = all_landmark_arr
    #         r,scaling,offset = get_random_processing()
    #         # frontal = frontal + offset
    #         frontal = (frontal - frontal.mean(axis=0)) * scaling \
    #                                     + frontal.mean(axis=0)
    #         frontal = np.dot(frontal - frontal.mean(axis=0), r) \
    #                                     + frontal.mean(axis=0)                 
            
    #         y0 = min(frontal[:,1])
    #         y1 = max(frontal[:,1])
    #         x0 = min(frontal[:,0])
    #         x1 = max(frontal[:,0])

    #         y0 = y0 - (y1 - y0) * 0.1
    #         y1 = y1 + (y1 - y0) * 0.1
    #         x0 = x0 - (x1 - x0) * 0.1
    #         x1 = x1 + (x1 - x0) * 0.1
            
    #         aaaa = x1-x0
    #         bbbb = y1-y0
            
    #         ccc.append((aaaa-aaa)/aaa) 
    #         ddd.append((bbbb-bbb)/bbb) 

    # print(max(ccc), min(ccc))
    # print(max(ddd), min(ddd))
    # print(sum(ccc)/len(ccc))
    # print(sum(ddd)/len(ddd))
    
    # # plt.plot([i for i in range(len(ccc))],ccc,'-',color="r")
    # plt.hist(ccc, bins=2000, color='steelblue')
    # plt.savefig("./0927.png")
    
